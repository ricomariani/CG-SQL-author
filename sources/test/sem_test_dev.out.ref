{stmt_list}: err

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_partition_create () CREATE OBJECT<partitioning>!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object<partitioning> notnull create_func
    | {name cql_partition_create}: object<partitioning> notnull create_func
    | {func_params_return}
      | {create_data_type}: object<partitioning> notnull create_func
        | {notnull}: object<partitioning> notnull
          | {type_object}: object<partitioning>
            | {name partitioning}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_partition_cursor (p OBJECT<partitioning>!, key CURSOR, value CURSOR) BOOL!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: bool notnull
    | {name cql_partition_cursor}: bool notnull
    | {func_params_return}
      | {params}: ok
      | | {param}: p: object<partitioning> notnull variable in
      | | | {param_detail}: p: object<partitioning> notnull variable in
      | |   | {name p}: p: object<partitioning> notnull variable in
      | |   | {notnull}: object<partitioning> notnull
      | |     | {type_object}: object<partitioning>
      | |       | {name partitioning}
      | | {params}
      |   | {param}: key: cursor variable in
      |   | | {param_detail}: key: cursor variable in
      |   |   | {name key}: key: cursor variable in
      |   |   | {type_cursor}: cursor
      |   | {params}
      |     | {param}: value: cursor variable in
      |       | {param_detail}: value: cursor variable in
      |         | {name value}: value: cursor variable in
      |         | {type_cursor}: cursor
      | {notnull}: bool notnull
        | {type_bool}: bool

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_extract_partition (p OBJECT<partitioning>!, key CURSOR) CREATE OBJECT!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object notnull create_func
    | {name cql_extract_partition}: object notnull create_func
    | {func_params_return}
      | {params}: ok
      | | {param}: p: object<partitioning> notnull variable in
      | | | {param_detail}: p: object<partitioning> notnull variable in
      | |   | {name p}: p: object<partitioning> notnull variable in
      | |   | {notnull}: object<partitioning> notnull
      | |     | {type_object}: object<partitioning>
      | |       | {name partitioning}
      | | {params}
      |   | {param}: key: cursor variable in
      |     | {param_detail}: key: cursor variable in
      |       | {name key}: key: cursor variable in
      |       | {type_cursor}: cursor
      | {create_data_type}: object notnull create_func
        | {notnull}: object notnull
          | {type_object}: object

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_string_dictionary_create () CREATE OBJECT<cql_string_dictionary>!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object<cql_string_dictionary> notnull create_func
    | {name cql_string_dictionary_create}: object<cql_string_dictionary> notnull create_func
    | {func_params_return}
      | {create_data_type}: object<cql_string_dictionary> notnull create_func
        | {notnull}: object<cql_string_dictionary> notnull
          | {type_object}: object<cql_string_dictionary>
            | {name cql_string_dictionary}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_string_dictionary_add (dict OBJECT<cql_string_dictionary>!, key TEXT!, value TEXT!) BOOL!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: bool notnull
    | {name cql_string_dictionary_add}: bool notnull
    | {func_params_return}
      | {params}: ok
      | | {param}: dict: object<cql_string_dictionary> notnull variable in
      | | | {param_detail}: dict: object<cql_string_dictionary> notnull variable in
      | |   | {name dict}: dict: object<cql_string_dictionary> notnull variable in
      | |   | {notnull}: object<cql_string_dictionary> notnull
      | |     | {type_object}: object<cql_string_dictionary>
      | |       | {name cql_string_dictionary}
      | | {params}
      |   | {param}: key: text notnull variable in
      |   | | {param_detail}: key: text notnull variable in
      |   |   | {name key}: key: text notnull variable in
      |   |   | {notnull}: text notnull
      |   |     | {type_text}: text
      |   | {params}
      |     | {param}: value: text notnull variable in
      |       | {param_detail}: value: text notnull variable in
      |         | {name value}: value: text notnull variable in
      |         | {notnull}: text notnull
      |           | {type_text}: text
      | {notnull}: bool notnull
        | {type_bool}: bool

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_string_dictionary_find (dict OBJECT<cql_string_dictionary>!, key TEXT) TEXT;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: text
    | {name cql_string_dictionary_find}: text
    | {func_params_return}
      | {params}: ok
      | | {param}: dict: object<cql_string_dictionary> notnull variable in
      | | | {param_detail}: dict: object<cql_string_dictionary> notnull variable in
      | |   | {name dict}: dict: object<cql_string_dictionary> notnull variable in
      | |   | {notnull}: object<cql_string_dictionary> notnull
      | |     | {type_object}: object<cql_string_dictionary>
      | |       | {name cql_string_dictionary}
      | | {params}
      |   | {param}: key: text variable in
      |     | {param_detail}: key: text variable in
      |       | {name key}: key: text variable in
      |       | {type_text}: text
      | {type_text}: text

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP OBJECT<cql_string_dictionary> : call add AS cql_string_dictionary_add;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {type_object}: object<cql_string_dictionary>
    | | {name cql_string_dictionary}
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name add}
        | {name cql_string_dictionary_add}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP OBJECT<cql_string_dictionary> : call find AS cql_string_dictionary_find;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {type_object}: object<cql_string_dictionary>
    | | {name cql_string_dictionary}
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name find}
        | {name cql_string_dictionary_find}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_object_dictionary_create () CREATE OBJECT<cql_object_dictionary>!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object<cql_object_dictionary> notnull create_func
    | {name cql_object_dictionary_create}: object<cql_object_dictionary> notnull create_func
    | {func_params_return}
      | {create_data_type}: object<cql_object_dictionary> notnull create_func
        | {notnull}: object<cql_object_dictionary> notnull
          | {type_object}: object<cql_object_dictionary>
            | {name cql_object_dictionary}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_object_dictionary_add (dict OBJECT<cql_object_dictionary>!, key TEXT!, value OBJECT!) BOOL!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: bool notnull
    | {name cql_object_dictionary_add}: bool notnull
    | {func_params_return}
      | {params}: ok
      | | {param}: dict: object<cql_object_dictionary> notnull variable in
      | | | {param_detail}: dict: object<cql_object_dictionary> notnull variable in
      | |   | {name dict}: dict: object<cql_object_dictionary> notnull variable in
      | |   | {notnull}: object<cql_object_dictionary> notnull
      | |     | {type_object}: object<cql_object_dictionary>
      | |       | {name cql_object_dictionary}
      | | {params}
      |   | {param}: key: text notnull variable in
      |   | | {param_detail}: key: text notnull variable in
      |   |   | {name key}: key: text notnull variable in
      |   |   | {notnull}: text notnull
      |   |     | {type_text}: text
      |   | {params}
      |     | {param}: value: object notnull variable in
      |       | {param_detail}: value: object notnull variable in
      |         | {name value}: value: object notnull variable in
      |         | {notnull}: object notnull
      |           | {type_object}: object
      | {notnull}: bool notnull
        | {type_bool}: bool

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_object_dictionary_find (dict OBJECT<cql_object_dictionary>!, key TEXT) OBJECT;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object
    | {name cql_object_dictionary_find}: object
    | {func_params_return}
      | {params}: ok
      | | {param}: dict: object<cql_object_dictionary> notnull variable in
      | | | {param_detail}: dict: object<cql_object_dictionary> notnull variable in
      | |   | {name dict}: dict: object<cql_object_dictionary> notnull variable in
      | |   | {notnull}: object<cql_object_dictionary> notnull
      | |     | {type_object}: object<cql_object_dictionary>
      | |       | {name cql_object_dictionary}
      | | {params}
      |   | {param}: key: text variable in
      |     | {param_detail}: key: text variable in
      |       | {name key}: key: text variable in
      |       | {type_text}: text
      | {type_object}: object

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP OBJECT<cql_object_dictionary> : call add AS cql_object_dictionary_add;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {type_object}: object<cql_object_dictionary>
    | | {name cql_object_dictionary}
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name add}
        | {name cql_object_dictionary_add}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP OBJECT<cql_object_dictionary> : call find AS cql_object_dictionary_find;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {type_object}: object<cql_object_dictionary>
    | | {name cql_object_dictionary}
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name find}
        | {name cql_object_dictionary_find}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_cursor_format (C CURSOR) CREATE TEXT!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: text notnull create_func
    | {name cql_cursor_format}: text notnull create_func
    | {func_params_return}
      | {params}: ok
      | | {param}: C: cursor variable in
      |   | {param_detail}: C: cursor variable in
      |     | {name C}: C: cursor variable in
      |     | {type_cursor}: cursor
      | {create_data_type}: text notnull create_func
        | {notnull}: text notnull
          | {type_text}: text

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_box_int (x INT) CREATE OBJECT<cql_box>!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object<cql_box> notnull create_func
    | {name cql_box_int}: object<cql_box> notnull create_func
    | {func_params_return}
      | {params}: ok
      | | {param}: x: integer variable in
      |   | {param_detail}: x: integer variable in
      |     | {name x}: x: integer variable in
      |     | {type_int}: integer
      | {create_data_type}: object<cql_box> notnull create_func
        | {notnull}: object<cql_box> notnull
          | {type_object}: object<cql_box>
            | {name cql_box}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_unbox_int (box OBJECT<cql_box>!) INT;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: integer
    | {name cql_unbox_int}: integer
    | {func_params_return}
      | {params}: ok
      | | {param}: box: object<cql_box> notnull variable in
      |   | {param_detail}: box: object<cql_box> notnull variable in
      |     | {name box}: box: object<cql_box> notnull variable in
      |     | {notnull}: object<cql_box> notnull
      |       | {type_object}: object<cql_box>
      |         | {name cql_box}
      | {type_int}: integer

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_box_real (x REAL) CREATE OBJECT<cql_box>!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object<cql_box> notnull create_func
    | {name cql_box_real}: object<cql_box> notnull create_func
    | {func_params_return}
      | {params}: ok
      | | {param}: x: real variable in
      |   | {param_detail}: x: real variable in
      |     | {name x}: x: real variable in
      |     | {type_real}: real
      | {create_data_type}: object<cql_box> notnull create_func
        | {notnull}: object<cql_box> notnull
          | {type_object}: object<cql_box>
            | {name cql_box}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_unbox_real (box OBJECT<cql_box>!) REAL;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: real
    | {name cql_unbox_real}: real
    | {func_params_return}
      | {params}: ok
      | | {param}: box: object<cql_box> notnull variable in
      |   | {param_detail}: box: object<cql_box> notnull variable in
      |     | {name box}: box: object<cql_box> notnull variable in
      |     | {notnull}: object<cql_box> notnull
      |       | {type_object}: object<cql_box>
      |         | {name cql_box}
      | {type_real}: real

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_box_bool (x BOOL) CREATE OBJECT<cql_box>!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object<cql_box> notnull create_func
    | {name cql_box_bool}: object<cql_box> notnull create_func
    | {func_params_return}
      | {params}: ok
      | | {param}: x: bool variable in
      |   | {param_detail}: x: bool variable in
      |     | {name x}: x: bool variable in
      |     | {type_bool}: bool
      | {create_data_type}: object<cql_box> notnull create_func
        | {notnull}: object<cql_box> notnull
          | {type_object}: object<cql_box>
            | {name cql_box}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_unbox_bool (box OBJECT<cql_box>!) BOOL;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: bool
    | {name cql_unbox_bool}: bool
    | {func_params_return}
      | {params}: ok
      | | {param}: box: object<cql_box> notnull variable in
      |   | {param_detail}: box: object<cql_box> notnull variable in
      |     | {name box}: box: object<cql_box> notnull variable in
      |     | {notnull}: object<cql_box> notnull
      |       | {type_object}: object<cql_box>
      |         | {name cql_box}
      | {type_bool}: bool

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_box_long (x LONG) CREATE OBJECT<cql_box>!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object<cql_box> notnull create_func
    | {name cql_box_long}: object<cql_box> notnull create_func
    | {func_params_return}
      | {params}: ok
      | | {param}: x: longint variable in
      |   | {param_detail}: x: longint variable in
      |     | {name x}: x: longint variable in
      |     | {type_long}: longint
      | {create_data_type}: object<cql_box> notnull create_func
        | {notnull}: object<cql_box> notnull
          | {type_object}: object<cql_box>
            | {name cql_box}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_unbox_long (box OBJECT<cql_box>!) LONG;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: longint
    | {name cql_unbox_long}: longint
    | {func_params_return}
      | {params}: ok
      | | {param}: box: object<cql_box> notnull variable in
      |   | {param_detail}: box: object<cql_box> notnull variable in
      |     | {name box}: box: object<cql_box> notnull variable in
      |     | {notnull}: object<cql_box> notnull
      |       | {type_object}: object<cql_box>
      |         | {name cql_box}
      | {type_long}: longint

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_box_text (x TEXT) CREATE OBJECT<cql_box>!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object<cql_box> notnull create_func
    | {name cql_box_text}: object<cql_box> notnull create_func
    | {func_params_return}
      | {params}: ok
      | | {param}: x: text variable in
      |   | {param_detail}: x: text variable in
      |     | {name x}: x: text variable in
      |     | {type_text}: text
      | {create_data_type}: object<cql_box> notnull create_func
        | {notnull}: object<cql_box> notnull
          | {type_object}: object<cql_box>
            | {name cql_box}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_unbox_text (box OBJECT<cql_box>!) TEXT;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: text
    | {name cql_unbox_text}: text
    | {func_params_return}
      | {params}: ok
      | | {param}: box: object<cql_box> notnull variable in
      |   | {param_detail}: box: object<cql_box> notnull variable in
      |     | {name box}: box: object<cql_box> notnull variable in
      |     | {notnull}: object<cql_box> notnull
      |       | {type_object}: object<cql_box>
      |         | {name cql_box}
      | {type_text}: text

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_box_blob (x BLOB) CREATE OBJECT<cql_box>!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object<cql_box> notnull create_func
    | {name cql_box_blob}: object<cql_box> notnull create_func
    | {func_params_return}
      | {params}: ok
      | | {param}: x: blob variable in
      |   | {param_detail}: x: blob variable in
      |     | {name x}: x: blob variable in
      |     | {type_blob}: blob
      | {create_data_type}: object<cql_box> notnull create_func
        | {notnull}: object<cql_box> notnull
          | {type_object}: object<cql_box>
            | {name cql_box}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_unbox_blob (box OBJECT<cql_box>!) BLOB;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: blob
    | {name cql_unbox_blob}: blob
    | {func_params_return}
      | {params}: ok
      | | {param}: box: object<cql_box> notnull variable in
      |   | {param_detail}: box: object<cql_box> notnull variable in
      |     | {name box}: box: object<cql_box> notnull variable in
      |     | {notnull}: object<cql_box> notnull
      |       | {type_object}: object<cql_box>
      |         | {name cql_box}
      | {type_blob}: blob

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_box_object (x OBJECT) CREATE OBJECT<cql_box>!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object<cql_box> notnull create_func
    | {name cql_box_object}: object<cql_box> notnull create_func
    | {func_params_return}
      | {params}: ok
      | | {param}: x: object variable in
      |   | {param_detail}: x: object variable in
      |     | {name x}: x: object variable in
      |     | {type_object}: object
      | {create_data_type}: object<cql_box> notnull create_func
        | {notnull}: object<cql_box> notnull
          | {type_object}: object<cql_box>
            | {name cql_box}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_unbox_object (box OBJECT<cql_box>!) OBJECT;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object
    | {name cql_unbox_object}: object
    | {func_params_return}
      | {params}: ok
      | | {param}: box: object<cql_box> notnull variable in
      |   | {param_detail}: box: object<cql_box> notnull variable in
      |     | {name box}: box: object<cql_box> notnull variable in
      |     | {notnull}: object<cql_box> notnull
      |       | {type_object}: object<cql_box>
      |         | {name cql_box}
      | {type_object}: object

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_box_get_type (box OBJECT<cql_box>!) INT!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: integer notnull
    | {name cql_box_get_type}: integer notnull
    | {func_params_return}
      | {params}: ok
      | | {param}: box: object<cql_box> notnull variable in
      |   | {param_detail}: box: object<cql_box> notnull variable in
      |     | {name box}: box: object<cql_box> notnull variable in
      |     | {notnull}: object<cql_box> notnull
      |       | {type_object}: object<cql_box>
      |         | {name cql_box}
      | {notnull}: integer notnull
        | {type_int}: integer

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP BOOL : call box AS cql_box_bool;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {type_bool}: bool
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name box}
        | {name cql_box_bool}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP INT : call box AS cql_box_int;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {type_int}: integer
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name box}
        | {name cql_box_int}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP LONG : call box AS cql_box_long;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {type_long}: longint
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name box}
        | {name cql_box_long}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP REAL : call box AS cql_box_real;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {type_real}: real
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name box}
        | {name cql_box_real}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP TEXT : call box AS cql_box_text;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {type_text}: text
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name box}
        | {name cql_box_text}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP BLOB : call box AS cql_box_blob;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {type_blob}: blob
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name box}
        | {name cql_box_blob}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP OBJECT : call box AS cql_box_object;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {type_object}: object
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name box}
        | {name cql_box_object}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP OBJECT : call to_bool AS cql_unbox_bool;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {type_object}: object
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name to_bool}
        | {name cql_unbox_bool}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP OBJECT : call to_int AS cql_unbox_int;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {type_object}: object
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name to_int}
        | {name cql_unbox_int}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP OBJECT : call to_long AS cql_unbox_long;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {type_object}: object
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name to_long}
        | {name cql_unbox_long}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP OBJECT : call to_real AS cql_unbox_real;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {type_object}: object
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name to_real}
        | {name cql_unbox_real}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP OBJECT : call to_text AS cql_unbox_text;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {type_object}: object
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name to_text}
        | {name cql_unbox_text}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP OBJECT : call to_blob AS cql_unbox_blob;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {type_object}: object
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name to_blob}
        | {name cql_unbox_blob}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP OBJECT : call to_object AS cql_unbox_object;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {type_object}: object
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name to_object}
        | {name cql_unbox_object}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
TYPE cql_string_list OBJECT<cql_string_list>;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_named_type}: object<cql_string_list>
    | {name cql_string_list}: object<cql_string_list>
    | {type_object}: object<cql_string_list>
      | {name cql_string_list}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_string_list_create () CREATE OBJECT<cql_string_list>!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object<cql_string_list> notnull create_func
    | {name cql_string_list_create}: object<cql_string_list> notnull create_func
    | {func_params_return}
      | {create_data_type}: object<cql_string_list> notnull create_func
        | {notnull}: object<cql_string_list> notnull
          | {type_object}: object<cql_string_list>
            | {name cql_string_list}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_string_list_set_at (list OBJECT<cql_string_list>!, index_ INT!, value_ TEXT!) OBJECT<cql_string_list>!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object<cql_string_list> notnull
    | {name cql_string_list_set_at}: object<cql_string_list> notnull
    | {func_params_return}
      | {params}: ok
      | | {param}: list: object<cql_string_list> notnull variable in
      | | | {param_detail}: list: object<cql_string_list> notnull variable in
      | |   | {name list}: list: object<cql_string_list> notnull variable in
      | |   | {notnull}: object<cql_string_list> notnull
      | |     | {type_object}: object<cql_string_list>
      | |       | {name cql_string_list}
      | | {params}
      |   | {param}: index_: integer notnull variable in
      |   | | {param_detail}: index_: integer notnull variable in
      |   |   | {name index_}: index_: integer notnull variable in
      |   |   | {notnull}: integer notnull
      |   |     | {type_int}: integer
      |   | {params}
      |     | {param}: value_: text notnull variable in
      |       | {param_detail}: value_: text notnull variable in
      |         | {name value_}: value_: text notnull variable in
      |         | {notnull}: text notnull
      |           | {type_text}: text
      | {notnull}: object<cql_string_list> notnull
        | {type_object}: object<cql_string_list>
          | {name cql_string_list}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_string_list_get_at (list OBJECT<cql_string_list>!, index_ INT!) TEXT;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: text
    | {name cql_string_list_get_at}: text
    | {func_params_return}
      | {params}: ok
      | | {param}: list: object<cql_string_list> notnull variable in
      | | | {param_detail}: list: object<cql_string_list> notnull variable in
      | |   | {name list}: list: object<cql_string_list> notnull variable in
      | |   | {notnull}: object<cql_string_list> notnull
      | |     | {type_object}: object<cql_string_list>
      | |       | {name cql_string_list}
      | | {params}
      |   | {param}: index_: integer notnull variable in
      |     | {param_detail}: index_: integer notnull variable in
      |       | {name index_}: index_: integer notnull variable in
      |       | {notnull}: integer notnull
      |         | {type_int}: integer
      | {type_text}: text

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_string_list_count (list OBJECT<cql_string_list>!) INT!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: integer notnull
    | {name cql_string_list_count}: integer notnull
    | {func_params_return}
      | {params}: ok
      | | {param}: list: object<cql_string_list> notnull variable in
      |   | {param_detail}: list: object<cql_string_list> notnull variable in
      |     | {name list}: list: object<cql_string_list> notnull variable in
      |     | {notnull}: object<cql_string_list> notnull
      |       | {type_object}: object<cql_string_list>
      |         | {name cql_string_list}
      | {notnull}: integer notnull
        | {type_int}: integer

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_string_list_add (list OBJECT<cql_string_list>!, string TEXT!) OBJECT<cql_string_list>!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object<cql_string_list> notnull
    | {name cql_string_list_add}: object<cql_string_list> notnull
    | {func_params_return}
      | {params}: ok
      | | {param}: list: object<cql_string_list> notnull variable in
      | | | {param_detail}: list: object<cql_string_list> notnull variable in
      | |   | {name list}: list: object<cql_string_list> notnull variable in
      | |   | {notnull}: object<cql_string_list> notnull
      | |     | {type_object}: object<cql_string_list>
      | |       | {name cql_string_list}
      | | {params}
      |   | {param}: string: text notnull variable in
      |     | {param_detail}: string: text notnull variable in
      |       | {name string}: string: text notnull variable in
      |       | {notnull}: text notnull
      |         | {type_text}: text
      | {notnull}: object<cql_string_list> notnull
        | {type_object}: object<cql_string_list>
          | {name cql_string_list}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP OBJECT<cql_string_list> : array set AS cql_string_list_set_at;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {type_object}: object<cql_string_list>
    | | {name cql_string_list}
    | {op_vals}
      | {name array}
      | {op_vals}
        | {name set}
        | {name cql_string_list_set_at}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP OBJECT<cql_string_list> : array get AS cql_string_list_get_at;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {type_object}: object<cql_string_list>
    | | {name cql_string_list}
    | {op_vals}
      | {name array}
      | {op_vals}
        | {name get}
        | {name cql_string_list_get_at}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP OBJECT<cql_string_list> : call add AS cql_string_list_add;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {type_object}: object<cql_string_list>
    | | {name cql_string_list}
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name add}
        | {name cql_string_list_add}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP OBJECT<cql_string_list> : get count AS cql_string_list_count;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {type_object}: object<cql_string_list>
    | | {name cql_string_list}
    | {op_vals}
      | {name get}
      | {op_vals}
        | {name count}
        | {name cql_string_list_count}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_cursor_column_count (C CURSOR) INT!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: integer notnull
    | {name cql_cursor_column_count}: integer notnull
    | {func_params_return}
      | {params}: ok
      | | {param}: C: cursor variable in
      |   | {param_detail}: C: cursor variable in
      |     | {name C}: C: cursor variable in
      |     | {type_cursor}: cursor
      | {notnull}: integer notnull
        | {type_int}: integer

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_cursor_column_type (C CURSOR, icol INT!) INT!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: integer notnull
    | {name cql_cursor_column_type}: integer notnull
    | {func_params_return}
      | {params}: ok
      | | {param}: C: cursor variable in
      | | | {param_detail}: C: cursor variable in
      | |   | {name C}: C: cursor variable in
      | |   | {type_cursor}: cursor
      | | {params}
      |   | {param}: icol: integer notnull variable in
      |     | {param_detail}: icol: integer notnull variable in
      |       | {name icol}: icol: integer notnull variable in
      |       | {notnull}: integer notnull
      |         | {type_int}: integer
      | {notnull}: integer notnull
        | {type_int}: integer

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_cursor_get_bool (C CURSOR, icol INT!) BOOL;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: bool
    | {name cql_cursor_get_bool}: bool
    | {func_params_return}
      | {params}: ok
      | | {param}: C: cursor variable in
      | | | {param_detail}: C: cursor variable in
      | |   | {name C}: C: cursor variable in
      | |   | {type_cursor}: cursor
      | | {params}
      |   | {param}: icol: integer notnull variable in
      |     | {param_detail}: icol: integer notnull variable in
      |       | {name icol}: icol: integer notnull variable in
      |       | {notnull}: integer notnull
      |         | {type_int}: integer
      | {type_bool}: bool

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_cursor_get_int (C CURSOR, icol INT!) INT;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: integer
    | {name cql_cursor_get_int}: integer
    | {func_params_return}
      | {params}: ok
      | | {param}: C: cursor variable in
      | | | {param_detail}: C: cursor variable in
      | |   | {name C}: C: cursor variable in
      | |   | {type_cursor}: cursor
      | | {params}
      |   | {param}: icol: integer notnull variable in
      |     | {param_detail}: icol: integer notnull variable in
      |       | {name icol}: icol: integer notnull variable in
      |       | {notnull}: integer notnull
      |         | {type_int}: integer
      | {type_int}: integer

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_cursor_get_long (C CURSOR, icol INT!) LONG;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: longint
    | {name cql_cursor_get_long}: longint
    | {func_params_return}
      | {params}: ok
      | | {param}: C: cursor variable in
      | | | {param_detail}: C: cursor variable in
      | |   | {name C}: C: cursor variable in
      | |   | {type_cursor}: cursor
      | | {params}
      |   | {param}: icol: integer notnull variable in
      |     | {param_detail}: icol: integer notnull variable in
      |       | {name icol}: icol: integer notnull variable in
      |       | {notnull}: integer notnull
      |         | {type_int}: integer
      | {type_long}: longint

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_cursor_get_real (C CURSOR, icol INT!) REAL;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: real
    | {name cql_cursor_get_real}: real
    | {func_params_return}
      | {params}: ok
      | | {param}: C: cursor variable in
      | | | {param_detail}: C: cursor variable in
      | |   | {name C}: C: cursor variable in
      | |   | {type_cursor}: cursor
      | | {params}
      |   | {param}: icol: integer notnull variable in
      |     | {param_detail}: icol: integer notnull variable in
      |       | {name icol}: icol: integer notnull variable in
      |       | {notnull}: integer notnull
      |         | {type_int}: integer
      | {type_real}: real

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_cursor_get_text (C CURSOR, icol INT!) TEXT;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: text
    | {name cql_cursor_get_text}: text
    | {func_params_return}
      | {params}: ok
      | | {param}: C: cursor variable in
      | | | {param_detail}: C: cursor variable in
      | |   | {name C}: C: cursor variable in
      | |   | {type_cursor}: cursor
      | | {params}
      |   | {param}: icol: integer notnull variable in
      |     | {param_detail}: icol: integer notnull variable in
      |       | {name icol}: icol: integer notnull variable in
      |       | {notnull}: integer notnull
      |         | {type_int}: integer
      | {type_text}: text

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_cursor_get_blob (C CURSOR, icol INT!) BLOB;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: blob
    | {name cql_cursor_get_blob}: blob
    | {func_params_return}
      | {params}: ok
      | | {param}: C: cursor variable in
      | | | {param_detail}: C: cursor variable in
      | |   | {name C}: C: cursor variable in
      | |   | {type_cursor}: cursor
      | | {params}
      |   | {param}: icol: integer notnull variable in
      |     | {param_detail}: icol: integer notnull variable in
      |       | {name icol}: icol: integer notnull variable in
      |       | {notnull}: integer notnull
      |         | {type_int}: integer
      | {type_blob}: blob

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_cursor_get_object (C CURSOR, icol INT!) OBJECT;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object
    | {name cql_cursor_get_object}: object
    | {func_params_return}
      | {params}: ok
      | | {param}: C: cursor variable in
      | | | {param_detail}: C: cursor variable in
      | |   | {name C}: C: cursor variable in
      | |   | {type_cursor}: cursor
      | | {params}
      |   | {param}: icol: integer notnull variable in
      |     | {param_detail}: icol: integer notnull variable in
      |       | {name icol}: icol: integer notnull variable in
      |       | {notnull}: integer notnull
      |         | {type_int}: integer
      | {type_object}: object

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP CURSOR : call count AS cql_cursor_column_count;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {name CURSOR}
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name count}
        | {name cql_cursor_column_count}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP CURSOR : call type AS cql_cursor_column_type;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {name CURSOR}
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name type}
        | {name cql_cursor_column_type}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP CURSOR : call to_bool AS cql_cursor_get_bool;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {name CURSOR}
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name to_bool}
        | {name cql_cursor_get_bool}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP CURSOR : call to_int AS cql_cursor_get_int;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {name CURSOR}
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name to_int}
        | {name cql_cursor_get_int}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP CURSOR : call to_long AS cql_cursor_get_long;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {name CURSOR}
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name to_long}
        | {name cql_cursor_get_long}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP CURSOR : call to_real AS cql_cursor_get_real;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {name CURSOR}
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name to_real}
        | {name cql_cursor_get_real}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP CURSOR : call to_text AS cql_cursor_get_text;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {name CURSOR}
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name to_text}
        | {name cql_cursor_get_text}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP CURSOR : call to_blob AS cql_cursor_get_blob;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {name CURSOR}
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name to_blob}
        | {name cql_cursor_get_blob}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
@OP CURSOR : call to_object AS cql_cursor_get_object;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {op_stmt}: ok
    | {name CURSOR}
    | {op_vals}
      | {name call}
      | {op_vals}
        | {name to_object}
        | {name cql_cursor_get_object}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE PROC cql_throw (code INT!) USING TRANSACTION;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_proc_stmt}: ok dml_proc
    | {proc_name_type}
    | | {name cql_throw}: ok dml_proc
    | | {int 2}
    | {proc_params_stmts}
      | {params}: ok
        | {param}: code: integer notnull variable in
          | {param_detail}: code: integer notnull variable in
            | {name code}: code: integer notnull variable in
            | {notnull}: integer notnull
              | {type_int}: integer

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
TYPE bool BOOL;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_named_type}: bool
    | {name bool}: bool
    | {type_bool}: bool

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
TYPE int INT;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_named_type}: integer
    | {name int}: integer
    | {type_int}: integer

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
TYPE integer INT;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_named_type}: integer
    | {name integer}: integer
    | {type_int}: integer

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
TYPE long LONG;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_named_type}: longint
    | {name long}: longint
    | {type_long}: longint

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
TYPE real REAL;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_named_type}: real
    | {name real}: real
    | {type_real}: real

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
TYPE text TEXT;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_named_type}: text
    | {name text}: text
    | {type_text}: text

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
TYPE object OBJECT;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_named_type}: object
    | {name object}: object
    | {type_object}: object

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
TYPE blob BLOB;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_named_type}: blob
    | {name blob}: blob
    | {type_blob}: blob

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
TYPE long_int LONG;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_named_type}: longint
    | {name long_int}: longint
    | {type_long}: longint

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE CONST GROUP cql_data_types (
  CQL_DATA_TYPE_NULL = 0,
  CQL_DATA_TYPE_INT32 = 1,
  CQL_DATA_TYPE_INT64 = 2,
  CQL_DATA_TYPE_DOUBLE = 3,
  CQL_DATA_TYPE_BOOL = 4,
  CQL_DATA_TYPE_STRING = 5,
  CQL_DATA_TYPE_BLOB = 6,
  CQL_DATA_TYPE_OBJECT = 7,
  CQL_DATA_TYPE_CORE = 0x3f,
  CQL_DATA_TYPE_ENCODED = 0x40,
  CQL_DATA_TYPE_NOT_NULL = 0x80
);

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_const_stmt}: ok
    | {name cql_data_types}
    | {const_values}
      | {const_value}: integer = 0 notnull
      | | {name CQL_DATA_TYPE_NULL}: integer = 0 notnull
      | | {int 0}: integer = 0 notnull
      | {const_values}
        | {const_value}: integer = 1 notnull
        | | {name CQL_DATA_TYPE_INT32}: integer = 1 notnull
        | | {int 1}: integer = 1 notnull
        | {const_values}
          | {const_value}: integer = 2 notnull
          | | {name CQL_DATA_TYPE_INT64}: integer = 2 notnull
          | | {int 2}: integer = 2 notnull
          | {const_values}
            | {const_value}: integer = 3 notnull
            | | {name CQL_DATA_TYPE_DOUBLE}: integer = 3 notnull
            | | {int 3}: integer = 3 notnull
            | {const_values}
              | {const_value}: integer = 4 notnull
              | | {name CQL_DATA_TYPE_BOOL}: integer = 4 notnull
              | | {int 4}: integer = 4 notnull
              | {const_values}
                | {const_value}: integer = 5 notnull
                | | {name CQL_DATA_TYPE_STRING}: integer = 5 notnull
                | | {int 5}: integer = 5 notnull
                | {const_values}
                  | {const_value}: integer = 6 notnull
                  | | {name CQL_DATA_TYPE_BLOB}: integer = 6 notnull
                  | | {int 6}: integer = 6 notnull
                  | {const_values}
                    | {const_value}: integer = 7 notnull
                    | | {name CQL_DATA_TYPE_OBJECT}: integer = 7 notnull
                    | | {int 7}: integer = 7 notnull
                    | {const_values}
                      | {const_value}: integer = 63 notnull
                      | | {name CQL_DATA_TYPE_CORE}: integer = 63 notnull
                      | | {int 0x3f}: integer = 63 notnull
                      | {const_values}
                        | {const_value}: integer = 64 notnull
                        | | {name CQL_DATA_TYPE_ENCODED}: integer = 64 notnull
                        | | {int 0x40}: integer = 64 notnull
                        | {const_values}
                          | {const_value}: integer = 128 notnull
                            | {name CQL_DATA_TYPE_NOT_NULL}: integer = 128 notnull
                            | {int 0x80}: integer = 128 notnull

The statement ending at line XXXX

EXPLAIN
SELECT 1;

test/sem_test_dev.sql:XXXX:1: error: in explain_stmt : CQL0292: explain statement is only available in dev mode because its result set may vary between SQLite versions

  {explain_stmt}: err
  | {int 1}
  | {select_stmt}
    | {select_core_list}
    | | {select_core}
    |   | {select_expr_list_con}
    |     | {select_expr_list}
    |     | | {select_expr}
    |     |   | {int 1}
    |     | {select_from_etc}
    |       | {select_where}
    |         | {select_groupby}
    |           | {select_having}
    | {select_orderby}
      | {select_limit}
        | {select_offset}

The statement ending at line XXXX

EXPLAIN QUERY PLAN
SELECT *
  FROM foo
    INNER JOIN bar
  WHERE foo.id = 1;

test/sem_test_dev.sql:XXXX:1: error: in explain_stmt : CQL0292: explain statement is only available in dev mode because its result set may vary between SQLite versions

  {explain_stmt}: err
  | {int 2}
  | {select_stmt}
    | {select_core_list}
    | | {select_core}
    |   | {select_expr_list_con}
    |     | {select_expr_list}
    |     | | {star}
    |     | {select_from_etc}
    |       | {join_clause}
    |       | | {table_or_subquery}
    |       | | | {name foo}
    |       | | {join_target_list}
    |       |   | {join_target}
    |       |     | {int 1} {join_inner}
    |       |     | {table_join}
    |       |       | {table_or_subquery}
    |       |         | {name bar}
    |       | {select_where}
    |         | {opt_where}
    |         | | {eq}
    |         |   | {dot}
    |         |   | | {name foo}
    |         |   | | {name id}
    |         |   | {int 1}
    |         | {select_groupby}
    |           | {select_having}
    | {select_orderby}
      | {select_limit}
        | {select_offset}

