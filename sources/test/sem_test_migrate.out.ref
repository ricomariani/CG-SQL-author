{stmt_list}: err

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_partition_create () CREATE OBJECT<partitioning>!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object<partitioning> notnull create_func
    | {name cql_partition_create}: object<partitioning> notnull create_func
    | {func_params_return}
      | {create_data_type}: object<partitioning> notnull create_func
        | {notnull}: object<partitioning> notnull
          | {type_object}: object<partitioning>
            | {name partitioning}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_partition_cursor (p OBJECT<partitioning>!, key CURSOR, value CURSOR) BOOL!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: bool notnull
    | {name cql_partition_cursor}: bool notnull
    | {func_params_return}
      | {params}: ok
      | | {param}: p: object<partitioning> notnull variable in
      | | | {param_detail}: p: object<partitioning> notnull variable in
      | |   | {name p}: p: object<partitioning> notnull variable in
      | |   | {notnull}: object<partitioning> notnull
      | |     | {type_object}: object<partitioning>
      | |       | {name partitioning}
      | | {params}
      |   | {param}: key: cursor variable in
      |   | | {param_detail}: key: cursor variable in
      |   |   | {name key}: key: cursor variable in
      |   |   | {type_cursor}: cursor
      |   | {params}
      |     | {param}: value: cursor variable in
      |       | {param_detail}: value: cursor variable in
      |         | {name value}: value: cursor variable in
      |         | {type_cursor}: cursor
      | {notnull}: bool notnull
        | {type_bool}: bool

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_extract_partition (p OBJECT<partitioning>!, key CURSOR) CREATE OBJECT!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object notnull create_func
    | {name cql_extract_partition}: object notnull create_func
    | {func_params_return}
      | {params}: ok
      | | {param}: p: object<partitioning> notnull variable in
      | | | {param_detail}: p: object<partitioning> notnull variable in
      | |   | {name p}: p: object<partitioning> notnull variable in
      | |   | {notnull}: object<partitioning> notnull
      | |     | {type_object}: object<partitioning>
      | |       | {name partitioning}
      | | {params}
      |   | {param}: key: cursor variable in
      |     | {param_detail}: key: cursor variable in
      |       | {name key}: key: cursor variable in
      |       | {type_cursor}: cursor
      | {create_data_type}: object notnull create_func
        | {notnull}: object notnull
          | {type_object}: object

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_string_dictionary_create () CREATE OBJECT<string_dictionary>!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object<string_dictionary> notnull create_func
    | {name cql_string_dictionary_create}: object<string_dictionary> notnull create_func
    | {func_params_return}
      | {create_data_type}: object<string_dictionary> notnull create_func
        | {notnull}: object<string_dictionary> notnull
          | {type_object}: object<string_dictionary>
            | {name string_dictionary}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_string_dictionary_add (dict OBJECT<string_dictionary>!, key TEXT!, value TEXT!) BOOL!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: bool notnull
    | {name cql_string_dictionary_add}: bool notnull
    | {func_params_return}
      | {params}: ok
      | | {param}: dict: object<string_dictionary> notnull variable in
      | | | {param_detail}: dict: object<string_dictionary> notnull variable in
      | |   | {name dict}: dict: object<string_dictionary> notnull variable in
      | |   | {notnull}: object<string_dictionary> notnull
      | |     | {type_object}: object<string_dictionary>
      | |       | {name string_dictionary}
      | | {params}
      |   | {param}: key: text notnull variable in
      |   | | {param_detail}: key: text notnull variable in
      |   |   | {name key}: key: text notnull variable in
      |   |   | {notnull}: text notnull
      |   |     | {type_text}: text
      |   | {params}
      |     | {param}: value: text notnull variable in
      |       | {param_detail}: value: text notnull variable in
      |         | {name value}: value: text notnull variable in
      |         | {notnull}: text notnull
      |           | {type_text}: text
      | {notnull}: bool notnull
        | {type_bool}: bool

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_string_dictionary_find (dict OBJECT<string_dictionary>!, key TEXT) TEXT;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: text
    | {name cql_string_dictionary_find}: text
    | {func_params_return}
      | {params}: ok
      | | {param}: dict: object<string_dictionary> notnull variable in
      | | | {param_detail}: dict: object<string_dictionary> notnull variable in
      | |   | {name dict}: dict: object<string_dictionary> notnull variable in
      | |   | {notnull}: object<string_dictionary> notnull
      | |     | {type_object}: object<string_dictionary>
      | |       | {name string_dictionary}
      | | {params}
      |   | {param}: key: text variable in
      |     | {param_detail}: key: text variable in
      |       | {name key}: key: text variable in
      |       | {type_text}: text
      | {type_text}: text

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_cursor_format (C CURSOR) CREATE TEXT!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: text notnull create_func
    | {name cql_cursor_format}: text notnull create_func
    | {func_params_return}
      | {params}: ok
      | | {param}: C: cursor variable in
      |   | {param_detail}: C: cursor variable in
      |     | {name C}: C: cursor variable in
      |     | {type_cursor}: cursor
      | {create_data_type}: text notnull create_func
        | {notnull}: text notnull
          | {type_text}: text

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_box_int (x INT) CREATE OBJECT<box>!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object<box> notnull create_func
    | {name cql_box_int}: object<box> notnull create_func
    | {func_params_return}
      | {params}: ok
      | | {param}: x: integer variable in
      |   | {param_detail}: x: integer variable in
      |     | {name x}: x: integer variable in
      |     | {type_int}: integer
      | {create_data_type}: object<box> notnull create_func
        | {notnull}: object<box> notnull
          | {type_object}: object<box>
            | {name box}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_unbox_int (box OBJECT<box>!) INT;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: integer
    | {name cql_unbox_int}: integer
    | {func_params_return}
      | {params}: ok
      | | {param}: box: object<box> notnull variable in
      |   | {param_detail}: box: object<box> notnull variable in
      |     | {name box}: box: object<box> notnull variable in
      |     | {notnull}: object<box> notnull
      |       | {type_object}: object<box>
      |         | {name box}
      | {type_int}: integer

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_box_real (x REAL) CREATE OBJECT<box>!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object<box> notnull create_func
    | {name cql_box_real}: object<box> notnull create_func
    | {func_params_return}
      | {params}: ok
      | | {param}: x: real variable in
      |   | {param_detail}: x: real variable in
      |     | {name x}: x: real variable in
      |     | {type_real}: real
      | {create_data_type}: object<box> notnull create_func
        | {notnull}: object<box> notnull
          | {type_object}: object<box>
            | {name box}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_unbox_real (box OBJECT<box>!) REAL;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: real
    | {name cql_unbox_real}: real
    | {func_params_return}
      | {params}: ok
      | | {param}: box: object<box> notnull variable in
      |   | {param_detail}: box: object<box> notnull variable in
      |     | {name box}: box: object<box> notnull variable in
      |     | {notnull}: object<box> notnull
      |       | {type_object}: object<box>
      |         | {name box}
      | {type_real}: real

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_box_bool (x BOOL) CREATE OBJECT<box>!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object<box> notnull create_func
    | {name cql_box_bool}: object<box> notnull create_func
    | {func_params_return}
      | {params}: ok
      | | {param}: x: bool variable in
      |   | {param_detail}: x: bool variable in
      |     | {name x}: x: bool variable in
      |     | {type_bool}: bool
      | {create_data_type}: object<box> notnull create_func
        | {notnull}: object<box> notnull
          | {type_object}: object<box>
            | {name box}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_unbox_bool (box OBJECT<box>!) BOOL;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: bool
    | {name cql_unbox_bool}: bool
    | {func_params_return}
      | {params}: ok
      | | {param}: box: object<box> notnull variable in
      |   | {param_detail}: box: object<box> notnull variable in
      |     | {name box}: box: object<box> notnull variable in
      |     | {notnull}: object<box> notnull
      |       | {type_object}: object<box>
      |         | {name box}
      | {type_bool}: bool

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_box_long (x LONG) CREATE OBJECT<box>!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object<box> notnull create_func
    | {name cql_box_long}: object<box> notnull create_func
    | {func_params_return}
      | {params}: ok
      | | {param}: x: longint variable in
      |   | {param_detail}: x: longint variable in
      |     | {name x}: x: longint variable in
      |     | {type_long}: longint
      | {create_data_type}: object<box> notnull create_func
        | {notnull}: object<box> notnull
          | {type_object}: object<box>
            | {name box}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_unbox_long (box OBJECT<box>!) LONG;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: longint
    | {name cql_unbox_long}: longint
    | {func_params_return}
      | {params}: ok
      | | {param}: box: object<box> notnull variable in
      |   | {param_detail}: box: object<box> notnull variable in
      |     | {name box}: box: object<box> notnull variable in
      |     | {notnull}: object<box> notnull
      |       | {type_object}: object<box>
      |         | {name box}
      | {type_long}: longint

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_box_text (x TEXT) CREATE OBJECT<box>!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object<box> notnull create_func
    | {name cql_box_text}: object<box> notnull create_func
    | {func_params_return}
      | {params}: ok
      | | {param}: x: text variable in
      |   | {param_detail}: x: text variable in
      |     | {name x}: x: text variable in
      |     | {type_text}: text
      | {create_data_type}: object<box> notnull create_func
        | {notnull}: object<box> notnull
          | {type_object}: object<box>
            | {name box}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_unbox_text (box OBJECT<box>!) TEXT;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: text
    | {name cql_unbox_text}: text
    | {func_params_return}
      | {params}: ok
      | | {param}: box: object<box> notnull variable in
      |   | {param_detail}: box: object<box> notnull variable in
      |     | {name box}: box: object<box> notnull variable in
      |     | {notnull}: object<box> notnull
      |       | {type_object}: object<box>
      |         | {name box}
      | {type_text}: text

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_box_blob (x BLOB) CREATE OBJECT<box>!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object<box> notnull create_func
    | {name cql_box_blob}: object<box> notnull create_func
    | {func_params_return}
      | {params}: ok
      | | {param}: x: blob variable in
      |   | {param_detail}: x: blob variable in
      |     | {name x}: x: blob variable in
      |     | {type_blob}: blob
      | {create_data_type}: object<box> notnull create_func
        | {notnull}: object<box> notnull
          | {type_object}: object<box>
            | {name box}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_unbox_blob (box OBJECT<box>!) BLOB;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: blob
    | {name cql_unbox_blob}: blob
    | {func_params_return}
      | {params}: ok
      | | {param}: box: object<box> notnull variable in
      |   | {param_detail}: box: object<box> notnull variable in
      |     | {name box}: box: object<box> notnull variable in
      |     | {notnull}: object<box> notnull
      |       | {type_object}: object<box>
      |         | {name box}
      | {type_blob}: blob

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_box_object (x OBJECT) CREATE OBJECT<box>!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object<box> notnull create_func
    | {name cql_box_object}: object<box> notnull create_func
    | {func_params_return}
      | {params}: ok
      | | {param}: x: object variable in
      |   | {param_detail}: x: object variable in
      |     | {name x}: x: object variable in
      |     | {type_object}: object
      | {create_data_type}: object<box> notnull create_func
        | {notnull}: object<box> notnull
          | {type_object}: object<box>
            | {name box}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC cql_unbox_object (box OBJECT<box>!) OBJECT;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object
    | {name cql_unbox_object}: object
    | {func_params_return}
      | {params}: ok
      | | {param}: box: object<box> notnull variable in
      |   | {param_detail}: box: object<box> notnull variable in
      |     | {name box}: box: object<box> notnull variable in
      |     | {notnull}: object<box> notnull
      |       | {type_object}: object<box>
      |         | {name box}
      | {type_object}: object

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
TYPE cql_string_list OBJECT<cql_string_list>;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_named_type}: object<cql_string_list>
    | {name cql_string_list}: object<cql_string_list>
    | {type_object}: object<cql_string_list>
      | {name cql_string_list}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC create_cql_string_list () CREATE OBJECT<cql_string_list>!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object<cql_string_list> notnull create_func
    | {name create_cql_string_list}: object<cql_string_list> notnull create_func
    | {func_params_return}
      | {create_data_type}: object<cql_string_list> notnull create_func
        | {notnull}: object<cql_string_list> notnull
          | {type_object}: object<cql_string_list>
            | {name cql_string_list}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC set_in_object_cql_string_list (list OBJECT<cql_string_list>!, index_ INT!, value_ TEXT!) OBJECT<cql_string_list>!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object<cql_string_list> notnull
    | {name set_in_object_cql_string_list}: object<cql_string_list> notnull
    | {func_params_return}
      | {params}: ok
      | | {param}: list: object<cql_string_list> notnull variable in
      | | | {param_detail}: list: object<cql_string_list> notnull variable in
      | |   | {name list}: list: object<cql_string_list> notnull variable in
      | |   | {notnull}: object<cql_string_list> notnull
      | |     | {type_object}: object<cql_string_list>
      | |       | {name cql_string_list}
      | | {params}
      |   | {param}: index_: integer notnull variable in
      |   | | {param_detail}: index_: integer notnull variable in
      |   |   | {name index_}: index_: integer notnull variable in
      |   |   | {notnull}: integer notnull
      |   |     | {type_int}: integer
      |   | {params}
      |     | {param}: value_: text notnull variable in
      |       | {param_detail}: value_: text notnull variable in
      |         | {name value_}: value_: text notnull variable in
      |         | {notnull}: text notnull
      |           | {type_text}: text
      | {notnull}: object<cql_string_list> notnull
        | {type_object}: object<cql_string_list>
          | {name cql_string_list}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC get_from_object_cql_string_list (list OBJECT<cql_string_list>!, index_ INT!) TEXT;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: text
    | {name get_from_object_cql_string_list}: text
    | {func_params_return}
      | {params}: ok
      | | {param}: list: object<cql_string_list> notnull variable in
      | | | {param_detail}: list: object<cql_string_list> notnull variable in
      | |   | {name list}: list: object<cql_string_list> notnull variable in
      | |   | {notnull}: object<cql_string_list> notnull
      | |     | {type_object}: object<cql_string_list>
      | |       | {name cql_string_list}
      | | {params}
      |   | {param}: index_: integer notnull variable in
      |     | {param_detail}: index_: integer notnull variable in
      |       | {name index_}: index_: integer notnull variable in
      |       | {notnull}: integer notnull
      |         | {type_int}: integer
      | {type_text}: text

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC get_object_cql_string_list_count (list OBJECT<cql_string_list>!) INT!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: integer notnull
    | {name get_object_cql_string_list_count}: integer notnull
    | {func_params_return}
      | {params}: ok
      | | {param}: list: object<cql_string_list> notnull variable in
      |   | {param_detail}: list: object<cql_string_list> notnull variable in
      |     | {name list}: list: object<cql_string_list> notnull variable in
      |     | {notnull}: object<cql_string_list> notnull
      |       | {type_object}: object<cql_string_list>
      |         | {name cql_string_list}
      | {notnull}: integer notnull
        | {type_int}: integer

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE FUNC add_object_cql_string_list (list OBJECT<cql_string_list>!, string TEXT!) OBJECT<cql_string_list>!;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_func_stmt}: object<cql_string_list> notnull
    | {name add_object_cql_string_list}: object<cql_string_list> notnull
    | {func_params_return}
      | {params}: ok
      | | {param}: list: object<cql_string_list> notnull variable in
      | | | {param_detail}: list: object<cql_string_list> notnull variable in
      | |   | {name list}: list: object<cql_string_list> notnull variable in
      | |   | {notnull}: object<cql_string_list> notnull
      | |     | {type_object}: object<cql_string_list>
      | |       | {name cql_string_list}
      | | {params}
      |   | {param}: string: text notnull variable in
      |     | {param_detail}: string: text notnull variable in
      |       | {name string}: string: text notnull variable in
      |       | {notnull}: text notnull
      |         | {type_text}: text
      | {notnull}: object<cql_string_list> notnull
        | {type_object}: object<cql_string_list>
          | {name cql_string_list}

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
DECLARE PROC cql_throw (code INT!) USING TRANSACTION;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_proc_stmt}: ok dml_proc
    | {proc_name_type}
    | | {name cql_throw}: ok dml_proc
    | | {int 2}
    | {proc_params_stmts}
      | {params}: ok
        | {param}: code: integer notnull variable in
          | {param_detail}: code: integer notnull variable in
            | {name code}: code: integer notnull variable in
            | {notnull}: integer notnull
              | {type_int}: integer

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
TYPE bool BOOL;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_named_type}: bool
    | {name bool}: bool
    | {type_bool}: bool

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
TYPE int INT;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_named_type}: integer
    | {name int}: integer
    | {type_int}: integer

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
TYPE integer INT;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_named_type}: integer
    | {name integer}: integer
    | {type_int}: integer

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
TYPE long LONG;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_named_type}: longint
    | {name long}: longint
    | {type_long}: longint

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
TYPE real REAL;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_named_type}: real
    | {name real}: real
    | {type_real}: real

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
TYPE text TEXT;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_named_type}: text
    | {name text}: text
    | {type_text}: text

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
TYPE object OBJECT;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_named_type}: object
    | {name object}: object
    | {type_object}: object

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
TYPE blob BLOB;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_named_type}: blob
    | {name blob}: blob
    | {type_blob}: blob

The statement ending at line XXXX

@ATTRIBUTE(cql:builtin)
TYPE long_int LONG;

  {stmt_and_attr}: ok
  | {misc_attrs}: ok
  | | {misc_attr}
  |   | {dot}
  |     | {name cql}
  |     | {name builtin}
  | {declare_named_type}: longint
    | {name long_int}: longint
    | {type_long}: longint

The statement ending at line XXXX

@SCHEMA_UPGRADE_VERSION (5);

  {schema_upgrade_version_stmt}: ok
  | {int 5}

The statement ending at line XXXX

CREATE TABLE foo(
  id INT!,
  rate LONG @DELETE(5, deletor),
  rate_2 LONG @DELETE(4),
  id2 INT @CREATE(4),
  name TEXT @CREATE(5),
  name_2 TEXT @CREATE(6)
);

  {create_table_stmt}: foo: { id: integer notnull, rate: longint, id2: integer, name: text }
  | {create_table_name_flags}
  | | {table_flags_attrs}
  | | | {int 0}
  | | {name foo}
  | {col_key_list}
    | {col_def}: id: integer notnull
    | | {col_def_type_attrs}: ok
    |   | {col_def_name_type}
    |   | | {name id}
    |   | | {type_int}: integer
    |   | {col_attrs_not_null}: ok
    | {col_key_list}
      | {col_def}: rate: longint @delete(5)
      | | {col_def_type_attrs}: ok
      |   | {col_def_name_type}
      |   | | {name rate}
      |   | | {type_long}: longint
      |   | {delete_attr}: ok
      |     | {version_annotation}
      |       | {int 5}
      |       | {name deletor}
      | {col_key_list}
        | {col_def}: rate_2: longint deleted @delete(4)
        | | {col_def_type_attrs}: ok
        |   | {col_def_name_type}
        |   | | {name rate_2}
        |   | | {type_long}: longint
        |   | {delete_attr}: ok
        |     | {version_annotation}
        |       | {int 4}
        | {col_key_list}
          | {col_def}: id2: integer @create(4)
          | | {col_def_type_attrs}: ok
          |   | {col_def_name_type}
          |   | | {name id2}
          |   | | {type_int}: integer
          |   | {create_attr}: ok
          |     | {version_annotation}
          |       | {int 4}
          | {col_key_list}
            | {col_def}: name: text @create(5)
            | | {col_def_type_attrs}: ok
            |   | {col_def_name_type}
            |   | | {name name}
            |   | | {type_text}: text
            |   | {create_attr}: ok
            |     | {version_annotation}
            |       | {int 5}
            | {col_key_list}
              | {col_def}: name_2: text deleted @create(6)
                | {col_def_type_attrs}: ok
                  | {col_def_name_type}
                  | | {name name_2}
                  | | {type_text}: text
                  | {create_attr}: ok
                    | {version_annotation}
                      | {int 6}

The statement ending at line XXXX

CREATE INDEX recent_index ON foo (name_2);

  {create_index_stmt}: ok
  | {create_index_on_list}
  | | {name recent_index}
  | | {name foo}
  | {flags_names_attrs}
    | {int 0}
    | {connector}
      | {index_names_and_attrs}
        | {indexed_columns}
          | {indexed_column}
            | {name name_2}

The statement ending at line XXXX

CREATE TABLE fk_not_there_yet(
  id INT,
  text1 TEXT REFERENCES foo (name_2),
  text2 TEXT,
  FOREIGN KEY (text2) REFERENCES foo (name_2)
);

  {create_table_stmt}: fk_not_there_yet: { id: integer, text1: text foreign_key, text2: text }
  | {create_table_name_flags}
  | | {table_flags_attrs}
  | | | {int 0}
  | | {name fk_not_there_yet}
  | {col_key_list}
    | {col_def}: id: integer
    | | {col_def_type_attrs}: ok
    |   | {col_def_name_type}
    |     | {name id}
    |     | {type_int}: integer
    | {col_key_list}
      | {col_def}: text1: text foreign_key
      | | {col_def_type_attrs}: ok
      |   | {col_def_name_type}
      |   | | {name text1}
      |   | | {type_text}: text
      |   | {col_attrs_fk}: ok
      |     | {fk_target_options}
      |       | {fk_target}
      |       | | {name foo}
      |       | | {name_list}
      |       |   | {name name_2}
      |       | {int 0}
      | {col_key_list}
        | {col_def}: text2: text
        | | {col_def_type_attrs}: ok
        |   | {col_def_name_type}
        |     | {name text2}
        |     | {type_text}: text
        | {col_key_list}
          | {fk_def}: ok
            | {fk_info}
              | {name_list}
              | | {name text2}
              | {fk_target_options}
                | {fk_target}
                | | {name foo}
                | | {name_list}
                |   | {name name_2}
                | {int 0}

The statement ending at line XXXX

SELECT rate_2
  FROM foo;

test/sem_test_migrate.sql:XXXX:1: error: in str : CQL0069: name not found 'rate_2'

  {select_stmt}: err
  | {select_core_list}: err
  | | {select_core}: err
  |   | {select_expr_list_con}: err
  |     | {select_expr_list}: err
  |     | | {select_expr}: err
  |     |   | {name rate_2}: err
  |     | {select_from_etc}: TABLE { foo: foo }
  |       | {table_or_subquery_list}: TABLE { foo: foo }
  |       | | {table_or_subquery}: TABLE { foo: foo }
  |       |   | {name foo}: TABLE { foo: foo }
  |       | {select_where}
  |         | {select_groupby}
  |           | {select_having}
  | {select_orderby}
    | {select_limit}
      | {select_offset}

The statement ending at line XXXX

PROC deletor ()
BEGIN
  DECLARE i INT;
END;

test/sem_test_migrate.sql:XXXX:1: error: in str : CQL0188: procedure is supposed to do schema migration but it doesn't have any DML 'deletor'

  {create_proc_stmt}: err
  | {name deletor}: err
  | {proc_params_stmts}
    | {stmt_list}: ok
      | {declare_vars_type}: integer
        | {name_list}: i: integer variable
        | | {name i}: i: integer variable
        | {type_int}: integer

The statement ending at line XXXX

CREATE TABLE bar(
  id INT!,
  name TEXT @CREATE(5, name_creator)
);

  {create_table_stmt}: bar: { id: integer notnull, name: text }
  | {create_table_name_flags}
  | | {table_flags_attrs}
  | | | {int 0}
  | | {name bar}
  | {col_key_list}
    | {col_def}: id: integer notnull
    | | {col_def_type_attrs}: ok
    |   | {col_def_name_type}
    |   | | {name id}
    |   | | {type_int}: integer
    |   | {col_attrs_not_null}: ok
    | {col_key_list}
      | {col_def}: name: text @create(5)
        | {col_def_type_attrs}: ok
          | {col_def_name_type}
          | | {name name}
          | | {type_text}: text
          | {create_attr}: ok
            | {version_annotation}
              | {int 5}
              | {name name_creator}

The statement ending at line XXXX

PROC name_creator (i INT)
BEGIN
  SELECT 1 AS x;
END;

test/sem_test_migrate.sql:XXXX:1: error: in params : CQL0233: procedure previously declared as schema upgrade proc, it can have no args 'name_creator'

  {create_proc_stmt}: err
  | {name name_creator}: err
  | {proc_params_stmts}
    | {params}
    | | {param}
    |   | {param_detail}
    |     | {name i}
    |     | {type_int}
    | {stmt_list}
      | {select_stmt}
        | {select_core_list}
        | | {select_core}
        |   | {select_expr_list_con}
        |     | {select_expr_list}
        |     | | {select_expr}
        |     |   | {int 1}
        |     |   | {opt_as_alias}
        |     |     | {name x}
        |     | {select_from_etc}
        |       | {select_where}
        |         | {select_groupby}
        |           | {select_having}
        | {select_orderby}
          | {select_limit}
            | {select_offset}

The statement ending at line XXXX

CREATE TABLE t1(
  id INT
) @CREATE(7);

  {create_table_stmt}: t1: { id: integer } deleted @create(7)
  | {create_table_name_flags}
  | | {table_flags_attrs}
  | | | {int 0}
  | | | {create_attr}
  | |   | {version_annotation}
  | |     | {int 7}
  | | {name t1}
  | {col_key_list}
    | {col_def}: id: integer
      | {col_def_type_attrs}: ok
        | {col_def_name_type}
          | {name id}
          | {type_int}: integer

The statement ending at line XXXX

CREATE TABLE t2(
  id INT
) @CREATE(5);

  {create_table_stmt}: t2: { id: integer } @create(5)
  | {create_table_name_flags}
  | | {table_flags_attrs}
  | | | {int 0}
  | | | {create_attr}
  | |   | {version_annotation}
  | |     | {int 5}
  | | {name t2}
  | {col_key_list}
    | {col_def}: id: integer
      | {col_def_type_attrs}: ok
        | {col_def_name_type}
          | {name id}
          | {type_int}: integer

The statement ending at line XXXX

CREATE TABLE t3(
  id INT
) @DELETE(4);

  {create_table_stmt}: t3: { id: integer } deleted @delete(4)
  | {create_table_name_flags}
  | | {table_flags_attrs}
  | | | {int 0}
  | | | {delete_attr}
  | |   | {version_annotation}
  | |     | {int 4}
  | | {name t3}
  | {col_key_list}
    | {col_def}: id: integer
      | {col_def_type_attrs}: ok
        | {col_def_name_type}
          | {name id}
          | {type_int}: integer

The statement ending at line XXXX

CREATE TABLE t4(
  id INT
) @DELETE(5);

  {create_table_stmt}: t4: { id: integer } @delete(5)
  | {create_table_name_flags}
  | | {table_flags_attrs}
  | | | {int 0}
  | | | {delete_attr}
  | |   | {version_annotation}
  | |     | {int 5}
  | | {name t4}
  | {col_key_list}
    | {col_def}: id: integer
      | {col_def_type_attrs}: ok
        | {col_def_name_type}
          | {name id}
          | {type_int}: integer

The statement ending at line XXXX

DELETE FROM t1;

test/sem_test_migrate.sql:XXXX:1: error: in str : CQL0151: table in delete statement does not exist (not visible in schema version 5) 't1'

  {delete_stmt}: err
  | {name t1}

The statement ending at line XXXX

DELETE FROM t2;

  {delete_stmt}: ok
  | {name t2}: t2: { id: integer } @create(5)

The statement ending at line XXXX

DELETE FROM t3;

test/sem_test_migrate.sql:XXXX:1: error: in str : CQL0151: table in delete statement does not exist (not visible in schema version 5) 't3'

  {delete_stmt}: err
  | {name t3}

The statement ending at line XXXX

DELETE FROM t4;

  {delete_stmt}: ok
  | {name t4}: t4: { id: integer } @delete(5)

The statement ending at line XXXX

CREATE TRIGGER will_not_be_processed_trigger
  AFTER INSERT ON lol_table
BEGIN
  DELETE FROM rofl WHERE id = 1;
END;

  {create_trigger_stmt}: ok
  | {int 0}
  | {trigger_body_vers}
    | {trigger_def}
      | {name will_not_be_processed_trigger}
      | {trigger_condition}
        | {int 8}
        | {trigger_op_target}
          | {trigger_operation}
          | | {int 128}
          | {trigger_target_action}
            | {name lol_table}
            | {trigger_action}
              | {int 0}
              | {trigger_when_stmts}
                | {stmt_list}
                  | {delete_stmt}
                    | {name rofl}
                    | {opt_where}
                      | {eq}
                        | {name id}
                        | {int 1}

The statement ending at line XXXX

@SCHEMA_AD_HOC_MIGRATION(5, MyAdHocMigration);

  {schema_ad_hoc_migration_stmt}: ok @create(5)
  | {version_annotation}
    | {int 5}
    | {name MyAdHocMigration}

The statement ending at line XXXX

PROC MyAdHocMigration ()
BEGIN
  UPDATE foo
    SET id = 1
    WHERE id = 2;
END;

  {create_proc_stmt}: ok dml_proc
  | {name MyAdHocMigration}: ok dml_proc
  | {proc_params_stmts}
    | {stmt_list}: ok
      | {update_stmt}: foo: { id: integer notnull, rate: longint, id2: integer, name: text }
        | {name foo}: foo: { id: integer notnull, rate: longint, id2: integer, name: text }
        | {update_set}
          | {update_list}: ok
          | | {update_entry}: id: integer notnull
          |   | {name id}: id: integer notnull
          |   | {int 1}: integer notnull
          | {update_from}
            | {update_where}
              | {opt_where}: bool notnull
              | | {eq}: bool notnull
              |   | {name id}: id: integer notnull
              |   | {int 2}: integer notnull
              | {update_orderby}

The statement ending at line XXXX

@PREVIOUS_SCHEMA;

test/sem_test_migrate.sql:XXXX:1: error: in previous_schema_stmt : CQL0254: switching to previous schema validation mode not allowed if @schema_upgrade_version was used

  {previous_schema_stmt}: err

